{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/math-base-assert-is-positive-integer' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar digamma = require( '@stdlib/math-base-special-digamma' );\nvar gamma = require( '@stdlib/math-base-special-gamma' );\nvar ln = require( '@stdlib/math-base-special-ln' );\n\n\n// MAIN //\n\n/**\n* Returns the differential entropy of an Erlang distribution.\n*\n* @param {PositiveInteger} k - shape parameter\n* @param {PositiveNumber} lambda - rate parameter\n* @returns {number} differential entropy\n*\n* @example\n* var v = entropy( 1, 1.0 );\n* // returns 1.0\n*\n* @example\n* var v = entropy( 4, 12.0 );\n* // returns ~-0.462\n*\n* @example\n* var v = entropy( 8, 2.0 );\n* // returns ~1.723\n*\n* @example\n* var v = entropy( 1.5, 2.0 );\n* // returns NaN\n*\n* @example\n* var v = entropy( 1, -0.1 );\n* // returns NaN\n*\n* @example\n* var v = entropy( -0.1, 1.0 );\n* // returns NaN\n*\n* @example\n* var v = entropy( 2, NaN );\n* // returns NaN\n*\n* @example\n* var v = entropy( NaN, 2.0 );\n* // returns NaN\n*/\nfunction entropy( k, lambda ) {\n\tif (\n\t\t!isPositiveInteger( k ) ||\n\t\tisnan( lambda ) ||\n\t\tlambda <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\treturn ( ( 1-k ) * digamma( k ) ) + ln( gamma( k ) / lambda ) + k;\n}\n\n\n// EXPORTS //\n\nmodule.exports = entropy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Erlang distribution differential entropy.\n*\n* @module @stdlib/stats-base-dists-erlang-entropy\n*\n* @example\n* var entropy = require( '@stdlib/stats-base-dists-erlang-entropy' );\n*\n* var v = entropy( 1, 1.0 );\n* // returns ~-0.154\n*\n* v = entropy( 4, 12.0 );\n* // returns ~9.587\n*\n* v = entropy( 8, 2.0 );\n* // returns ~33.973\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAoB,QAAS,8CAA+C,EAC5EC,EAAQ,QAAS,iCAAkC,EACnDC,EAAU,QAAS,mCAAoC,EACvDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAK,QAAS,8BAA+B,EA4CjD,SAASC,EAASC,EAAGC,EAAS,CAC7B,MACC,CAACP,EAAmBM,CAAE,GACtBL,EAAOM,CAAO,GACdA,GAAU,EAEH,KAEG,EAAED,GAAMJ,EAASI,CAAE,EAAMF,EAAID,EAAOG,CAAE,EAAIC,CAAO,EAAID,CACjE,CAKAP,EAAO,QAAUM,IC5CjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isPositiveInteger", "isnan", "digamma", "gamma", "ln", "entropy", "k", "lambda", "main"]
}
